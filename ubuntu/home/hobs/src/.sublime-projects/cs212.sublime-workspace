{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"is",
				"is"
			],
			[
				"N",
				"N"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "# -----------\n# User Instructions\n# \n# Modify the hand_rank function so that it returns the\n# correct output for the remaining hand types, which are:\n# full house, flush, straight, three of a kind, two pair,\n# pair, and high card hands. \n# \n# Do this by completing each return statement below.\n#\n# You may assume the following behavior of each function:\n#\n# straight(ranks): returns True if the hand is a straight.\n# flush(hand):     returns True if the hand is a flush.\n# kind(n, ranks):  returns the first rank that the hand has\n#                  exactly n of. For A hand with 4 sevens \n#                  this function would return 7.\n# two_pair(ranks): if there is a two pair, this function \n#                  returns their corresponding ranks as a \n#                  tuple. For example, a hand with 2 twos\n#                  and 2 fours would cause this function\n#                  to return (4, 2).\n# card_ranks(hand) returns an ORDERED tuple of the ranks \n#                  in a hand (where the order goes from\n#                  highest to lowest rank). \n#\n# Since we are assuming that some functions are already\n# written, this code will not RUN. Clicking SUBMIT will \n# tell you if you are correct.\n\ndef poker(hands):\n    \"Return the best hand: poker([hand,...]) => hand\"\n    return max(hands, key=hand_rank)\n\ndef hand_rank(hand):\n    ranks = card_ranks(hand)\n    if straight(ranks) and flush(hand):            # straight flush\n        return (8, max(ranks))\n    elif kind(4, ranks):                           # 4 of a kind\n        return (7, kind(4, ranks), kind(1, ranks))\n    elif kind(3, ranks) and kind(2, ranks):        # full house\n        return (6, max(ranks), min(ranks))  # your code here\n    elif flush(hand):                              # flush\n        return (5, max(ranks))\n    elif straight(ranks):                          # straight\n        return (4, max(ranks))\n    elif kind(3, ranks):                           # 3 of a kind\n        return (3, max(ranks))      # your code here\n    elif two_pair(ranks): \n        sr = sorted(ranks)                         # 2 pair\n        return (2, sr[-1], sr[-3])  # your code here\n    elif kind(2, ranks):                           # kind\n        return # your code here\n    else:                                          # high card\n        return # your code here\n\ndef test():\n    \"Test cases for the functions in poker program\"\n    sf = \"6C 7C 8C 9C TC\".split() # Straight Flush\n    fk = \"9D 9H 9S 9C 7D\".split() # Four of a Kind\n    fh = \"TD TC TH 7C 7D\".split() # Full House\n    assert poker([sf, fk, fh]) == sf\n    assert poker([fk, fh]) == fk\n    assert poker([fh, fh]) == fh\n    assert poker([sf]) == sf\n    assert poker([sf] + 99*[fh]) == sf\n    assert hand_rank(sf) == (8, 10)\n    assert hand_rank(fk) == (7, 9, 7)\n    assert hand_rank(fh) == (6, 10, 7)\n    return 'tests pass'\n",
			"file": "/home/hobs/src/udacity/cs212-Design-of-Computer-Programs/quiz/q1_10_poker_hand_rank.py",
			"file_size": 2862,
			"file_write_time": 1369533781000000,
			"settings":
			{
				"buffer_size": 2862,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 75.0,
		"selected_items":
		[
			[
				"Package Controlinst",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/hobs/src/udacity/cs212-Design-of-Computer-Programs/quiz/q1_9_poker_hand_rank_test.py",
		"/home/hobs/src/udacity/cs212-Design-of-Computer-Programs/quiz/q1-24--evaluate_poker_hand_rank.py",
		"/home/hobs/src/udacity/cs212-Design-of-Computer-Programs/quiz/q2_3_cryptographic_formula.py",
		"/home/hobs/src/udacity/cs212-Design-of-Computer-Programs/quiz/q1_10_poker_hand_rank.py",
		"/media/sda1/ssd/home/hobs/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/media/sda1/ssd/home/hobs/.config/sublime-text-2/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/hobs/src/udacity/cs212-Design-of-Computer-Programs/quizzes/q2_3_cryptographic_formula.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"allmax",
			"fill"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/hobs/src/udacity/cs212-Design-of-Computer-Programs/quiz/q1_10_poker_hand_rank.py",
					"settings":
					{
						"buffer_size": 2862,
						"regions":
						{
						},
						"selection":
						[
							[
								2862,
								2862
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 312.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 261.0,
	"status_bar_visible": true
}
